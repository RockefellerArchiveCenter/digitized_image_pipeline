AWSTemplateFormatVersion: '2010-09-09'
Description: >
  digitized-av-notifications

  Handles notifications for validation and packaging of incoming digitized audiovisual assets.

Parameters:
  ApplicationEnvironment:
    Type: String
    Description: The environment in which the application should be deployed.
    AllowedValues:
      - dev
      - prod
  ApplicationName:
    Type: String
    Description: The name of the application to be deployed.
  TeamsUrl:
    Type: String
    Description: URL for a Teams channel webhook.

Resources:
  HandleDigitizedAVNotificationsRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: !Sub 'Allows ${ApplicationName} lambda to be executed successfully.'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DigitizedAVParameterStorePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 'ssm:GetParametersByPath*'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ApplicationEnvironment}/${ApplicationName}*'
  
  DigitizedAVEventsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: digitized-av-events

  TeamsUrlParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: URL for Teams Channel webhook.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/TEAMS_URL
      Tags: 
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !Ref TeamsUrl

  HandleDigitizedAVNotificationsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub 'rac-${ApplicationEnvironment}-lambda'
        S3Key: !Sub '${ApplicationName}.zip'
      FunctionName: !Ref ApplicationName
      Handler: handle_digitized_av_notifications.lambda_handler
      Role: !GetAtt HandleDigitizedAVNotificationsRole.Arn
      Runtime: python3.9
      Timeout: 30
      Environment:
        Variables:
          ENV: !Ref ApplicationEnvironment
          APP_CONFIG_PATH: !Ref ApplicationName
      Tags:
        - Key: Environment
          Value: !Ref ApplicationEnvironment
        - Key: Application
          Value: !Ref ApplicationName
      Architectures:
        - x86_64

  NotificationsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${HandleDigitizedAVNotificationsFunction}"
      RetentionInDays: 90
  
  HandleDigitizedAVNotificationsFunctionDigitizedAvEventsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref HandleDigitizedAVNotificationsFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref DigitizedAVEventsTopic
  
  HandleDigitizedAVNotificationsFunctionDigitizedAvEvents:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt HandleDigitizedAVNotificationsFunction.Arn
      Protocol: lambda
      TopicArn: !Ref DigitizedAVEventsTopic

Outputs:
  HandleDigitizedAVNotificationsFunction:
    Description: 'Handle Digitized AV Notifications Lambda Function ARN'
    Value: !GetAtt HandleDigitizedAVNotificationsFunction.Arn
  DigitizedAVEventsTopic:
    Description: 'Digitized AV Events SNS Topic ARN'
    Value: !Ref DigitizedAVEventsTopic
    Export:
      Name:
        DigitizedAV-SNSTopicArn